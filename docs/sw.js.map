{"version":3,"sources":["sw.js"],"names":["staticCacheName","dynamicCacheName","assets","self","addEventListener","evt","waitUntil","caches","open","then","cache","console","log","addAll","keys","Promise","all","filter","key","map","delete","respondWith","match","request","cacheRes","fetch","fetchRes","url","indexOf","put","clone","catch"],"mappings":";AAAA,IAAMA,EAAkB,iBAClBC,EAAmB,mBACnBC,EAAS,CACX,IACA,cACA,uEACA,oDACA,iFACA,6DACA,+CACA,gEACA,yEACA,iFACA,2DAIJC,KAAKC,iBAAiB,UAAW,SAACC,GAE9BA,EAAIC,UACAC,OAAOC,KAAKR,GAAiBS,KAAK,SAACC,GAC/BC,QAAQC,IAAI,wBACZF,EAAMG,OAAOX,QAMzBC,KAAKC,iBAAiB,WAAY,SAACC,GAE/BA,EAAIC,UACAC,OAAOO,OAAOL,KAAK,SAACK,GAETC,OAAAA,QAAQC,IACXF,EACKG,OAAO,SAACC,GAAQA,OAAAA,IAAQlB,IACxBmB,IAAI,SAACD,GAAQX,OAAAA,OAAOa,OAAOF,WAOhDf,KAAKC,iBAAiB,QAAS,SAACC,GAE5BA,EAAIgB,YACAd,OACKe,MAAMjB,EAAIkB,SACVd,KAAK,SAACe,GAECA,OAAAA,GACAC,MAAMpB,EAAIkB,SAASd,KAAK,SAACiB,GACdnB,OAAAA,OAAOC,KAAKP,GAAkBQ,KAAK,SAACC,GAIhCgB,OAHiC,IAApCrB,EAAIkB,QAAQI,IAAIC,QAAQ,SACxBlB,EAAMmB,IAAIxB,EAAIkB,QAAQI,IAAKD,EAASI,SAEjCJ,QAKtBK,MAAM,WAAMxB,OAAAA,OAAOe,MAAM","file":"sw.js","sourceRoot":"..\\src","sourcesContent":["const staticCacheName = 'site-static-v3';\r\nconst dynamicCacheName = 'dynamic-cache-v3';\r\nconst assets = [\r\n    '/',\r\n    '/index.html',\r\n    'https://cdnjs.cloudflare.com/ajax/libs/uikit/3.1.4/css/uikit.min.css',\r\n    'https://bootswatch.com/4/cyborg/bootstrap.min.css',\r\n    'https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css',\r\n    'https://fonts.googleapis.com/css?family=Alata&display=swap',\r\n    'https://cdn.jsdelivr.net/npm/vue/dist/vue.js',\r\n    'https://cdnjs.cloudflare.com/ajax/libs/gsap/3.5.1/gsap.min.js',\r\n    'https://cdnjs.cloudflare.com/ajax/libs/gsap/3.5.1/ScrollTrigger.min.js',\r\n    'https://cdnjs.cloudflare.com/ajax/libs/smoothscroll/1.4.10/SmoothScroll.min.js',\r\n    'https://unpkg.com/scrollreveal/dist/scrollreveal.min.js',\r\n];\r\n\r\n// install event\r\nself.addEventListener('install', (evt) => {\r\n    //console.log('service worker installed');\r\n    evt.waitUntil(\r\n        caches.open(staticCacheName).then((cache) => {\r\n            console.log('caching shell assets');\r\n            cache.addAll(assets);\r\n        })\r\n    );\r\n});\r\n\r\n// activate event\r\nself.addEventListener('activate', (evt) => {\r\n    //console.log('service worker activated');\r\n    evt.waitUntil(\r\n        caches.keys().then((keys) => {\r\n            //console.log(keys);\r\n            return Promise.all(\r\n                keys\r\n                    .filter((key) => key !== staticCacheName)\r\n                    .map((key) => caches.delete(key))\r\n            );\r\n        })\r\n    );\r\n});\r\n\r\n// fetch event\r\nself.addEventListener('fetch', (evt) => {\r\n    //console.log('fetch event', evt);\r\n    evt.respondWith(\r\n        caches\r\n            .match(evt.request)\r\n            .then((cacheRes) => {\r\n                return (\r\n                    cacheRes ||\r\n                    fetch(evt.request).then((fetchRes) => {\r\n                        return caches.open(dynamicCacheName).then((cache) => {\r\n                            if (evt.request.url.indexOf('http') === 0) {\r\n                                cache.put(evt.request.url, fetchRes.clone());\r\n                            }\r\n                            return fetchRes;\r\n                        });\r\n                    })\r\n                );\r\n            })\r\n            .catch(() => caches.match('/pages/fallback.html'))\r\n    );\r\n});\r\n"]}